### A tiny cellular automata script I wrote in Python
### As you can likely tell, this is the most Python I've ever written.

#print line function
def printgen(arr):
	line = ""
	for cell in arr:
		if cell == True:
			line = line + "*"
		else:
			line = line + "-"

	print line

def grow(arr):
	new_arr = [False] * len(arr)
	a = 0
	while a < len(arr):
		if a == 0:
			last = False
		else:
			b = a - 1
			last = arr[b]

		if a == len(arr) - 1:
			next_el = False
		else:
			b = a + 1
			next_el = arr[b]

		if last == True and next_el == False:
			new_arr[a] = True
		elif last == False and next_el == True:
			new_arr[a] = True
		else:
			new_arr[a] = False

		a = a + 1

	return new_arr

#we want 32 lines
maxgen = 32

#we want 64 cells
numcells = 64

# create our first generation
cell_arr = [False] * numcells
cell_arr[31] = True

for i in range(maxgen):
	printgen(cell_arr)
	cell_arr = grow(cell_arr)


'''
Output:

$ python cells.py
-------------------------------*--------------------------------
------------------------------*-*-------------------------------
-----------------------------*---*------------------------------
----------------------------*-*-*-*-----------------------------
---------------------------*-------*----------------------------
--------------------------*-*-----*-*---------------------------
-------------------------*---*---*---*--------------------------
------------------------*-*-*-*-*-*-*-*-------------------------
-----------------------*---------------*------------------------
----------------------*-*-------------*-*-----------------------
---------------------*---*-----------*---*----------------------
--------------------*-*-*-*---------*-*-*-*---------------------
-------------------*-------*-------*-------*--------------------
------------------*-*-----*-*-----*-*-----*-*-------------------
-----------------*---*---*---*---*---*---*---*------------------
----------------*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-----------------
---------------*-------------------------------*----------------
--------------*-*-----------------------------*-*---------------
-------------*---*---------------------------*---*--------------
------------*-*-*-*-------------------------*-*-*-*-------------
-----------*-------*-----------------------*-------*------------
----------*-*-----*-*---------------------*-*-----*-*-----------
---------*---*---*---*-------------------*---*---*---*----------
--------*-*-*-*-*-*-*-*-----------------*-*-*-*-*-*-*-*---------
-------*---------------*---------------*---------------*--------
------*-*-------------*-*-------------*-*-------------*-*-------
-----*---*-----------*---*-----------*---*-----------*---*------
----*-*-*-*---------*-*-*-*---------*-*-*-*---------*-*-*-*-----
---*-------*-------*-------*-------*-------*-------*-------*----
--*-*-----*-*-----*-*-----*-*-----*-*-----*-*-----*-*-----*-*---
-*---*---*---*---*---*---*---*---*---*---*---*---*---*---*---*--
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-


'''